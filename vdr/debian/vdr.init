#! /bin/sh
#
# vdr start-stop script
#
### BEGIN INIT INFO
# Provides:          vdr
# Required-Start:    $remote_fs $network $syslog
# Required-Stop:     $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts the Linux Video Disk Recorder (VDR)
# Description:       Starts the Linux Video Disk Recorder (VDR)
### END INIT INFO

. /etc/default/vdr

NAME='vdr'
EXECUTABLE='/usr/bin/vdr'
PID_FILE="/var/run/${NAME}.pid"
USER='vdr'
GROUP='vdr'
MODULES=$(lsmod | awk '/^dvb/ {gsub(/,/,"\\n", $4); print $4}' | uniq | tac | grep -v "^$")
[ "$MODULES" ] && MODULES="$MODULES dvb_core"

. /lib/lsb/init-functions

loadDriver() {
    for MODULE in $MODULES
    do 
        modprobe $MODULE >/dev/null 2>&1
    done
}

unloadDriver() {
    for MODULE in $MODULES
    do 
        rmmod $MODULE >/dev/null 2>&1
        wait $(pidof rmmod)
    done
}

status() {
    status_of_proc -p "$PID_FILE" "$EXECUTABLE" 'VDR'
}

stop() {
    if status > /dev/null
    then
        echo "Stopping VDR"
        start-stop-daemon -K -q -p "$PID_FILE" --retry 5 && rm -f "$PID_FILE"
    else
        echo 'VDR is not running'
    fi
}

_locale() {
    [ -r /etc/environment ]    && . /etc/environment > /dev/null 2>&1 || true
    [ -r /etc/default/locale ] && . /etc/default/locale > /dev/null 2>&1 || true
    
    if [ -n "$LANG" ]
    then
        echo "$LANG"
    elif  [ -n "$LC_ALL" ]
    then
        echo "$LC_ALL"
    else
        echo 'C.UTF-8'
    fi
}

_setEnv() {
    if [ -z "$VDR_LANG" ]
    then
        local VDR_LANG=$(_locale)
    fi
    
    export LANG=$VDR_LANG LC_ALL=$VDR_LANG $VDR_ENV
}

start() {
    if status > /dev/null
    then
        echo 'VDR is already running'
        return 0
    fi
    
    local plugins=''
    local args="-v $VIDEO_DIR -c $CFG_DIR -L $PLUGIN_DIR -s $VDRSHUTDOWN \
                -E $EPG_FILE -g /tmp --port $SVDRP_PORT $OPTIONS"
    local epg_dir=$(dirname "$EPG_FILE")
    
    for i in $PLUGINS
    do
        if [ -f "$PLUGIN_CFG_DIR/plugin.$i.conf" ]
        then
            a="$(echo $(cat "$PLUGIN_CFG_DIR/plugin.$i.conf" | sed "s/ *#.*$//"))"
            plugins="$plugins -P '$i $a'"
        else
            plugins="$plugins -P $i"
        fi
    done
    
    [ ! -d "$epg_dir" ] && mkdir "$epg_dir" || true
    [ ! -d "$VIDEO_DIR" ] && mkdir "$VIDEO_DIR" || true
    chown $USER:$GROUP $(dirname "$EPG_FILE")
    chown $USER:$GROUP "$VIDEO_DIR"
    _setEnv
    
    ([ -z "$PLUGINS" ] && echo 'Starting VDR') || \
    echo "Starting VDR with plugins: $PLUGINS"
    
    for i in $(seq 1 5)
    do
      [ -z "$failed" ] || echo 'Retrying...'

      unloadDriver
      loadDriver
      eval start-stop-daemon -S -q -o -m -b -c "$USER" -n "$NAME" -p "$PID_FILE" \
                        -x "$EXECUTABLE" -- $args $plugins
      
      for i in $(seq 1 3)
      do
          sleep 1
          if status > /dev/null
          then
              return 0
          fi
      done
      
      local failed='true'
    done
    
    echo 'Failed to start VDR'
    return 1
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  status)
    status
  ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
esac
